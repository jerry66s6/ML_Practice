# -*- coding: utf-8 -*-
"""Generate Sorted Polynomial Features.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/123Cu3AiEXBXwwC2Yi_1G8lUqeCWUl3AO
"""

import numpy as np
from itertools import combinations_with_replacement

def polynomial_features(X, degree):
    # ✏️ Your code here
    n_samples, n_features = X.shape[0], X.shape[1]

    comb_list = []
    for i in range(degree + 1):
        combs = combinations_with_replacement(range(n_features), i)
        for comb in combs:
            comb_list.append(comb)

    n_output_features = len(comb_list)
    X_poly = np.zeros((n_samples, n_output_features))

    for i, comb in enumerate(comb_list):
        if len(comb) == 0:
            X_poly[:, i] = 1.0
        else:
            X_poly[:, i] = np.prod(X[:, comb], axis=1)

    # (Optional) Sorting features per row is unusual for polynomial features.
    # If you really need it, keep the loop below; otherwise it can be removed.
    for i in range(len(X_poly)):
        X_poly[i] = np.sort(X_poly[i])

    return X_poly