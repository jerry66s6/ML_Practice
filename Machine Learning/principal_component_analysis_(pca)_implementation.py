# -*- coding: utf-8 -*-
"""Principal Component Analysis (PCA) Implementation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/123Cu3AiEXBXwwC2Yi_1G8lUqeCWUl3AO
"""

import numpy as np

def pca(data: np.ndarray, k: int) -> np.ndarray:
    # Your code here
    mean = np.mean(data, axis=0)
    std = np.std(data, axis=0)
    standard = (data - mean) / std

    covariance = np.cov(standard, rowvar=False)
    eigenvalues, eigenvectors = np.linalg.eig(covariance)

    index = np.argsort(eigenvalues)[::-1]
    sorted_eigenvectors = eigenvectors[:, index]

    principal_components = sorted_eigenvectors[:, :k]
    return np.round(principal_components, 4)