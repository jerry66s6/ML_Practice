# -*- coding: utf-8 -*-
"""Linear Regression Using Gradient Descent.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/123Cu3AiEXBXwwC2Yi_1G8lUqeCWUl3AO
"""

import numpy as np

def linear_regression_gradient_descent(X: np.ndarray, y: np.ndarray, alpha: float, iterations: int) -> np.ndarray:
    # Get number of training examples and features
    m, n = X.shape

    # Initialize parameters (theta) to zeros
    theta = np.zeros((n, 1))

    # Reshape y to be a column vector if needed
    y = y.reshape(-1, 1)

    # Perform gradient descent
    for _ in range(iterations):
        predictions = X @ theta
        errors = predictions - y
        gradient = (1 / m) * (X.T @ errors)
        theta = theta - alpha * gradient

    # Round to 4 decimal places
    return np.round(theta, 4)