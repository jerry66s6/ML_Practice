# -*- coding: utf-8 -*-
"""Single Neuron.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/123Cu3AiEXBXwwC2Yi_1G8lUqeCWUl3AO
"""

import math
import numpy as np

def single_neuron_model(features: list[list[float]],
                        labels: list[int],
                        weights: list[float],
                        bias: float) -> (list[float], float):
    # Convert inputs to numpy arrays
    features = np.array(features)
    weights = np.array(weights)

    probabilities = []
    mse = 0.0

    for i in range(len(features)):
        z = np.dot(features[i], weights) + bias
        g = 1 / (1 + np.exp(-z))  # sigmoid activation
        probabilities.append(g)
        mse += (g - labels[i]) ** 2

    mse /= len(labels)
    return probabilities, mse